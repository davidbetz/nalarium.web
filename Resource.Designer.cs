//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nalarium.Web {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Nalarium.Web.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid access rule access type..
        /// </summary>
        public static string AccessDenial_InvalidRuleType {
            get {
                return ResourceManager.GetString("AccessDenial_InvalidRuleType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous alias.  The alias key points to more than one handler.  To disambiguate, use the &apos;matchtype,key&apos; syntax on _both_ handlers.  For example, &apos;contains,/{0}/&apos; and &apos;endsWith,/{0}/&apos;.
        /// </summary>
        public static string Alias_Ambiguous {
            get {
                return ResourceManager.GetString("Alias_Ambiguous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous alias (&apos;key: {0}&apos;).  The alias key points to more than one handler.  To disambiguate, use the &apos;matchtype,key&apos; syntax on _both_ handlers.  For example, &apos;contains,/example/&apos; and &apos;endsWith,/example/&apos;.
        /// </summary>
        public static string Alias_Invalid {
            get {
                return ResourceManager.GetString("Alias_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The component on which this component is based does not have a type set.  Type is required..
        /// </summary>
        public static string Component_TypeRequired {
            get {
                return ResourceManager.GetString("Component_TypeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClientHidden is an invalid Visibility settings for type {0}..
        /// </summary>
        public static string Control_ClientHiddenNotCompatible {
            get {
                return ResourceManager.GetString("Control_ClientHiddenNotCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Children.
        /// </summary>
        public static string Editor_Children {
            get {
                return ResourceManager.GetString("Editor_Children", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Viewing.
        /// </summary>
        public static string Editor_CurrentlyViewing {
            get {
                return ResourceManager.GetString("Editor_CurrentlyViewing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Page.
        /// </summary>
        public static string Editor_DefaultPage {
            get {
                return ResourceManager.GetString("Editor_DefaultPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go to {0}.
        /// </summary>
        public static string Editor_Goto {
            get {
                return ResourceManager.GetString("Editor_Goto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ....
        /// </summary>
        public static string Editor_MoreOptions {
            get {
                return ResourceManager.GetString("Editor_MoreOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent.
        /// </summary>
        public static string Editor_Parent {
            get {
                return ResourceManager.GetString("Editor_Parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string Editor_Path {
            get {
                return ResourceManager.GetString("Editor_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Editor_Save {
            get {
                return ResourceManager.GetString("Editor_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string Editor_Settings {
            get {
                return ResourceManager.GetString("Editor_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nalarium SEO Web Configuration.
        /// </summary>
        public static string Editor_Title {
            get {
                return ResourceManager.GetString("Editor_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Original.
        /// </summary>
        public static string Editor_ViewOriginal {
            get {
                return ResourceManager.GetString("Editor_ViewOriginal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid factory &apos;{0}&apos;..
        /// </summary>
        public static string Factory_Invalid {
            get {
                return ResourceManager.GetString("Factory_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access Denials.
        /// </summary>
        public static string General_AccessDenials {
            get {
                return ResourceManager.GetString("General_AccessDenials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aliases.
        /// </summary>
        public static string General_Aliases {
            get {
                return ResourceManager.GetString("General_Aliases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Application Processors.
        /// </summary>
        public static string General_ApplicationProcessors {
            get {
                return ResourceManager.GetString("General_ApplicationProcessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catch-All Processors.
        /// </summary>
        public static string General_CatchAllProcessors {
            get {
                return ResourceManager.GetString("General_CatchAllProcessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Components.
        /// </summary>
        public static string General_Components {
            get {
                return ResourceManager.GetString("General_Components", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Redirect.
        /// </summary>
        public static string General_DefaultRedirect {
            get {
                return ResourceManager.GetString("General_DefaultRedirect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate key found (&apos;{0}&apos;)..
        /// </summary>
        public static string General_DuplicateKey {
            get {
                return ResourceManager.GetString("General_DuplicateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Processors.
        /// </summary>
        public static string General_ErrorProcessors {
            get {
                return ResourceManager.GetString("General_ErrorProcessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Factories.
        /// </summary>
        public static string General_Factories {
            get {
                return ResourceManager.GetString("General_Factories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handlers.
        /// </summary>
        public static string General_Handlers {
            get {
                return ResourceManager.GetString("General_Handlers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pre Processors.
        /// </summary>
        public static string General_InitProcessors {
            get {
                return ResourceManager.GetString("General_InitProcessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} not found..
        /// </summary>
        public static string General_NotFound {
            get {
                return ResourceManager.GetString("General_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post Processors.
        /// </summary>
        public static string General_OverrideProcessors {
            get {
                return ResourceManager.GetString("General_OverrideProcessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        public static string General_Path {
            get {
                return ResourceManager.GetString("General_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirects.
        /// </summary>
        public static string General_Redirect {
            get {
                return ResourceManager.GetString("General_Redirect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is required..
        /// </summary>
        public static string General_Required {
            get {
                return ResourceManager.GetString("General_Required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mid Processors.
        /// </summary>
        public static string General_SelectionProcessors {
            get {
                return ResourceManager.GetString("General_SelectionProcessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post State Processors.
        /// </summary>
        public static string General_StateProcessors {
            get {
                return ResourceManager.GetString("General_StateProcessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time.
        /// </summary>
        public static string General_Time {
            get {
                return ResourceManager.GetString("General_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous handler (referenceKey: &apos;{0}&apos;).  No handler referenceKey may match another handler&apos;s text..
        /// </summary>
        public static string Handler_Ambiguous {
            get {
                return ResourceManager.GetString("Handler_Ambiguous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous handler (text: &apos;{0}&apos;).  No handler text may match another handler&apos;s referenceKey..
        /// </summary>
        public static string Handler_AmbiguousReverse {
            get {
                return ResourceManager.GetString("Handler_AmbiguousReverse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate reference key found (&apos;{0}&apos;).
        /// </summary>
        public static string Handler_DuplicateReferenceKey {
            get {
                return ResourceManager.GetString("Handler_DuplicateReferenceKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ExportScope may only be used to export data from context or session state..
        /// </summary>
        public static string HttpData_ExportScopeInvalidUse {
            get {
                return ResourceManager.GetString("HttpData_ExportScopeInvalidUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license key associated with this version of Nalarium Pro 2.0 has expired..
        /// </summary>
        public static string License_Expired {
            get {
                return ResourceManager.GetString("License_Expired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid page parameter ({0}). Page endpoints require a parameter with the full page path, not a sequence name code (i.e. /Page_/Home/Welcome.aspx, not {{SequenceName}})..
        /// </summary>
        public static string Page_EndpointRequiresFullPath {
            get {
                return ResourceManager.GetString("Page_EndpointRequiresFullPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid path ({0}).  All paths are relative and must not contain the protocol prefix or domain..
        /// </summary>
        public static string Page_InvalidPath {
            get {
                return ResourceManager.GetString("Page_InvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This endpoint is configured to be a page alias, but the backing page [{0}] is a sequence (i.e. it inherits from the Nalarium.Web.Controls.SequencePage class).  If you meant to use a sequence alias, use &quot;Sequence&quot; instead of &quot;Page&quot; as your endpoint type.  Otherwise, change the base type of the page to not inherit from the sequence page class..
        /// </summary>
        public static string Page_SequencePageDetected {
            get {
                return ResourceManager.GetString("Page_SequencePageDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This endpoint is configured to be a sequence alias,  but the backing page [{0}] is not a sequence.  The backing page must inherit from the Nalarium.Web.Controls.SequencePage class to be a valid sequence..
        /// </summary>
        public static string Page_SequencePageRequired {
            get {
                return ResourceManager.GetString("Page_SequencePageRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Invalid path ({0}).  All paths are relative and, therefore, must not contain the protocol prefix or domain.&quot;.
        /// </summary>
        public static string Path_PrefixForbidden {
            get {
                return ResourceManager.GetString("Path_PrefixForbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &apos;{0}&apos; is not a legal path because it is too long.  The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters..
        /// </summary>
        public static string Path_TooLong {
            get {
                return ResourceManager.GetString("Path_TooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid processor &apos;{0}&apos;..
        /// </summary>
        public static string Processor_Invalid {
            get {
                return ResourceManager.GetString("Processor_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid assembly specified for life cycle processor ({0})..
        /// </summary>
        public static string Processor_LifeCycleAssemblyInvalid {
            get {
                return ResourceManager.GetString("Processor_LifeCycleAssemblyInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Life cycle processor registrations must be include both the type name and the assembly name..
        /// </summary>
        public static string Processor_LifeCycleTypeAndAssemblyRequired {
            get {
                return ResourceManager.GetString("Processor_LifeCycleTypeAndAssemblyRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No redirect found for this path..
        /// </summary>
        public static string Redirect_NotFound {
            get {
                return ResourceManager.GetString("Redirect_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid security validator..
        /// </summary>
        public static string Security_InvalidValidator {
            get {
                return ResourceManager.GetString("Security_InvalidValidator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login target is required when login security is enabled..
        /// </summary>
        public static string Security_LoginTargetRequired {
            get {
                return ResourceManager.GetString("Security_LoginTargetRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control for {0} was not found (attempted path was {1})..
        /// </summary>
        public static string Sequence_ControlNotFound {
            get {
                return ResourceManager.GetString("Sequence_ControlNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate sequence name in configuration..
        /// </summary>
        public static string Sequence_DuplicateNameInConfig {
            get {
                return ResourceManager.GetString("Sequence_DuplicateNameInConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid sequence parameter ({0}). Sequence endpoints require a parameter with the sequence name code not a path (i.e. {{SequenceName}}, not /Page_/Home/Welcome.aspx)..
        /// </summary>
        public static string Sequence_EndpointRequiresSequenceNameCode {
            get {
                return ResourceManager.GetString("Sequence_EndpointRequiresSequenceNameCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid sequence view.  Sequence views must inherit from the type Nalarium.Web.Control.SequenceView..
        /// </summary>
        public static string Sequence_InvalidView {
            get {
                return ResourceManager.GetString("Sequence_InvalidView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Views must be suffixed with the text &apos;View&apos;..
        /// </summary>
        public static string Sequence_InvalidViewSuffix {
            get {
                return ResourceManager.GetString("Sequence_InvalidViewSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sequence views (and, therefore, versions) must either all be MVC views or all non-MVC views; they may not be mixed..
        /// </summary>
        public static string Sequence_MustAllBeMvcOrNonMvc {
            get {
                return ResourceManager.GetString("Sequence_MustAllBeMvcOrNonMvc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To enable MVC, the sequence page must inherit from Nalarium.Web.Sequence.Mvc.Page&lt;T&gt; where T is your MVC controller type..
        /// </summary>
        public static string Sequence_MvcRequiresMvcPage {
            get {
                return ResourceManager.GetString("Sequence_MvcRequiresMvcPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MVP view interface used by the presenter is not implemented on the sequence view..
        /// </summary>
        public static string Sequence_MvpPresenterViewNotImplmentedOnSequenceView {
            get {
                return ResourceManager.GetString("Sequence_MvpPresenterViewNotImplmentedOnSequenceView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No views are registered..
        /// </summary>
        public static string Sequence_NoViewsRegistered {
            get {
                return ResourceManager.GetString("Sequence_NoViewsRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sequencer control was not found..
        /// </summary>
        public static string Sequence_SequencerNotFound {
            get {
                return ResourceManager.GetString("Sequence_SequencerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service aliases requires IIS7 using the integrated pipeline..
        /// </summary>
        public static string Server_IntegratedPipelineRequired {
            get {
                return ResourceManager.GetString("Server_IntegratedPipelineRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session is not available.  If you are using a feature that requires session, please ensure that your HTTP handler implements the System.Web.SessionState.IRequiresSessionState interface.  This is a non-intrusive interface that does not require any member implementation..
        /// </summary>
        public static string Session_NotAvailable {
            get {
                return ResourceManager.GetString("Session_NotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abstract web domains may not be sealed (&apos;{0}&apos;)..
        /// </summary>
        public static string WebDomain_AbstractWebDomainMayNotBeSealed {
            get {
                return ResourceManager.GetString("WebDomain_AbstractWebDomainMayNotBeSealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot inherit from a sealed web domain ({0})..
        /// </summary>
        public static string WebDomain_CannotInheritFromSealed {
            get {
                return ResourceManager.GetString("WebDomain_CannotInheritFromSealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to defaultPage and defaultEndpoint may not both be set.  Please remove one of these..
        /// </summary>
        public static string WebDomain_DefaultPageAndDefaultEndpointMayNotBothBeSet {
            get {
                return ResourceManager.GetString("WebDomain_DefaultPageAndDefaultEndpointMayNotBothBeSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DefaultPage catch-all mode requires that a default page be set..
        /// </summary>
        public static string WebDomain_DefaultPageCatchAllModeRequiresDefaultPage {
            get {
                return ResourceManager.GetString("WebDomain_DefaultPageCatchAllModeRequiresDefaultPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one catch-all endpoint (&quot;*&quot;) is allowed per web domain..
        /// </summary>
        public static string WebDomain_DuplicateCatchAll {
            get {
                return ResourceManager.GetString("WebDomain_DuplicateCatchAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate web domain name (&apos;{0}&apos;)..
        /// </summary>
        public static string WebDomain_DuplicateName {
            get {
                return ResourceManager.GetString("WebDomain_DuplicateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid web domain &apos;{0}&apos;.
        /// </summary>
        public static string WebDomain_Invalid {
            get {
                return ResourceManager.GetString("WebDomain_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abstract web domains may not have a path or a subdomain (&apos;{0}&apos;)..
        /// </summary>
        public static string WebDomain_InvalidAbstractWebDomain {
            get {
                return ResourceManager.GetString("WebDomain_InvalidAbstractWebDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-abstract web domains require either the &apos;path&apos; or the &apos;subdomain&apos; attribute..
        /// </summary>
        public static string WebDomain_PathAndSubdomainNotFound {
            get {
                return ResourceManager.GetString("WebDomain_PathAndSubdomainNotFound", resourceCulture);
            }
        }
    }
}
