<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessDenial_InvalidRuleType" xml:space="preserve">
    <value>Invalid access rule access type.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Alias_Ambiguous" xml:space="preserve">
    <value>Ambiguous alias.  The alias key points to more than one handler.  To disambiguate, use the 'matchtype,key' syntax on _both_ handlers.  For example, 'contains,/{0}/' and 'endsWith,/{0}/'</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Alias_Invalid" xml:space="preserve">
    <value>Ambiguous alias ('key: {0}').  The alias key points to more than one handler.  To disambiguate, use the 'matchtype,key' syntax on _both_ handlers.  For example, 'contains,/example/' and 'endsWith,/example/'</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Component_TypeRequired" xml:space="preserve">
    <value>The component on which this component is based does not have a type set.  Type is required.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_NotFound" xml:space="preserve">
    <value>{0} not found.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_Required" xml:space="preserve">
    <value>{0} is required.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Handler_Ambiguous" xml:space="preserve">
    <value>Ambiguous handler (referenceKey: '{0}').  No handler referenceKey may match another handler's text.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Handler_AmbiguousReverse" xml:space="preserve">
    <value>Ambiguous handler (text: '{0}').  No handler text may match another handler's referenceKey.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Handler_DuplicateReferenceKey" xml:space="preserve">
    <value>Duplicate reference key found ('{0}')</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="HttpData_ExportScopeInvalidUse" xml:space="preserve">
    <value>ExportScope may only be used to export data from context or session state.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Page_InvalidPath" xml:space="preserve">
    <value>Invalid path ({0}).  All paths are relative and must not contain the protocol prefix or domain.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Sequence_SequencerNotFound" xml:space="preserve">
    <value>Sequencer control was not found.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Sequence_ControlNotFound" xml:space="preserve">
    <value>Control for {0} was not found (attempted path was {1}).</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Sequence_InvalidViewSuffix" xml:space="preserve">
    <value>Views must be suffixed with the text 'View'.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="WebDomain_Invalid" xml:space="preserve">
    <value>Invalid web domain '{0}'</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="WebDomain_PathAndSubdomainNotFound" xml:space="preserve">
    <value>Non-abstract web domains require either the 'path' or the 'subdomain' attribute.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_DuplicateKey" xml:space="preserve">
    <value>Duplicate key found ('{0}').</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Path_PrefixForbidden" xml:space="preserve">
    <value>"Invalid path ({0}).  All paths are relative and, therefore, must not contain the protocol prefix or domain."</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Path_TooLong" xml:space="preserve">
    <value>The path '{0}' is not a legal path because it is too long.  The fully qualified file name must be less than 260 characters, and the directory name must be less than 248 characters.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Server_IntegratedPipelineRequired" xml:space="preserve">
    <value>Service aliases requires IIS7 using the integrated pipeline.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Processor_LifeCycleTypeAndAssemblyRequired" xml:space="preserve">
    <value>Life cycle processor registrations must be include both the type name and the assembly name.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Processor_LifeCycleAssemblyInvalid" xml:space="preserve">
    <value>Invalid assembly specified for life cycle processor ({0}).</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Control_ClientHiddenNotCompatible" xml:space="preserve">
    <value>ClientHidden is an invalid Visibility settings for type {0}.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Factory_Invalid" xml:space="preserve">
    <value>Invalid factory '{0}'.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Processor_Invalid" xml:space="preserve">
    <value>Invalid processor '{0}'.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_DefaultRedirect" xml:space="preserve">
    <value>Default Redirect</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Editor_Children" xml:space="preserve">
    <value>Children</value>
  </data>
  <data name="Editor_CurrentlyViewing" xml:space="preserve">
    <value>Current Viewing</value>
  </data>
  <data name="Editor_DefaultPage" xml:space="preserve">
    <value>Default Page</value>
  </data>
  <data name="Editor_Goto" xml:space="preserve">
    <value>Go to {0}</value>
  </data>
  <data name="Editor_MoreOptions" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="Editor_Parent" xml:space="preserve">
    <value>Parent</value>
  </data>
  <data name="Editor_Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="Editor_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Editor_Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Editor_ViewOriginal" xml:space="preserve">
    <value>View Original</value>
  </data>
  <data name="General_AccessDenials" xml:space="preserve">
    <value>Access Denials</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_Aliases" xml:space="preserve">
    <value>Aliases</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_ApplicationProcessors" xml:space="preserve">
    <value>Global Application Processors</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_CatchAllProcessors" xml:space="preserve">
    <value>Catch-All Processors</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_Components" xml:space="preserve">
    <value>Components</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_ErrorProcessors" xml:space="preserve">
    <value>Error Processors</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_Factories" xml:space="preserve">
    <value>Factories</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_Handlers" xml:space="preserve">
    <value>Handlers</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_SelectionProcessors" xml:space="preserve">
    <value>Mid Processors</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_OverrideProcessors" xml:space="preserve">
    <value>Post Processors</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_StateProcessors" xml:space="preserve">
    <value>Post State Processors</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_InitProcessors" xml:space="preserve">
    <value>Pre Processors</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_Redirect" xml:space="preserve">
    <value>Redirects</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Editor_Title" xml:space="preserve">
    <value>Nalarium SEO Web Configuration</value>
  </data>
  <data name="License_Expired" xml:space="preserve">
    <value>The license key associated with this version of Nalarium Pro 2.0 has expired.</value>
  </data>
  <data name="Sequence_DuplicateNameInConfig" xml:space="preserve">
    <value>Duplicate sequence name in configuration.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="General_Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="General_Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Redirect_NotFound" xml:space="preserve">
    <value>No redirect found for this path.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Security_InvalidValidator" xml:space="preserve">
    <value>Invalid security validator.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Security_LoginTargetRequired" xml:space="preserve">
    <value>Login target is required when login security is enabled.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Sequence_NoViewsRegistered" xml:space="preserve">
    <value>No views are registered.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="WebDomain_DuplicateCatchAll" xml:space="preserve">
    <value>Only one catch-all endpoint ("*") is allowed per web domain.</value>
  </data>
  <data name="Session_NotAvailable" xml:space="preserve">
    <value>Session is not available.  If you are using a feature that requires session, please ensure that your HTTP handler implements the System.Web.SessionState.IRequiresSessionState interface.  This is a non-intrusive interface that does not require any member implementation.</value>
  </data>
  <data name="Page_SequencePageDetected" xml:space="preserve">
    <value>This endpoint is configured to be a page alias, but the backing page [{0}] is a sequence (i.e. it inherits from the Nalarium.Web.Controls.SequencePage class).  If you meant to use a sequence alias, use "Sequence" instead of "Page" as your endpoint type.  Otherwise, change the base type of the page to not inherit from the sequence page class.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Page_SequencePageRequired" xml:space="preserve">
    <value>This endpoint is configured to be a sequence alias,  but the backing page [{0}] is not a sequence.  The backing page must inherit from the Nalarium.Web.Controls.SequencePage class to be a valid sequence.</value>
    <comment>Do not translate.</comment>
  </data>
  <data name="Sequence_InvalidView" xml:space="preserve">
    <value>Invalid sequence view.  Sequence views must inherit from the type Nalarium.Web.Control.SequenceView.</value>
  </data>
  <data name="Page_EndpointRequiresFullPath" xml:space="preserve">
    <value>Invalid page parameter ({0}). Page endpoints require a parameter with the full page path, not a sequence name code (i.e. /Page_/Home/Welcome.aspx, not {{SequenceName}}).</value>
  </data>
  <data name="Sequence_EndpointRequiresSequenceNameCode" xml:space="preserve">
    <value>Invalid sequence parameter ({0}). Sequence endpoints require a parameter with the sequence name code not a path (i.e. {{SequenceName}}, not /Page_/Home/Welcome.aspx).</value>
  </data>
  <data name="Sequence_MvpPresenterViewNotImplmentedOnSequenceView" xml:space="preserve">
    <value>The MVP view interface used by the presenter is not implemented on the sequence view.</value>
  </data>
  <data name="Sequence_MustAllBeMvcOrNonMvc" xml:space="preserve">
    <value>Sequence views (and, therefore, versions) must either all be MVC views or all non-MVC views; they may not be mixed.</value>
  </data>
  <data name="Sequence_MvcRequiresMvcPage" xml:space="preserve">
    <value>To enable MVC, the sequence page must inherit from Nalarium.Web.Sequence.Mvc.Page&lt;T&gt; where T is your MVC controller type.</value>
  </data>
  <data name="WebDomain_InvalidAbstractWebDomain" xml:space="preserve">
    <value>Abstract web domains may not have a path or a subdomain ('{0}').</value>
  </data>
  <data name="WebDomain_AbstractWebDomainMayNotBeSealed" xml:space="preserve">
    <value>Abstract web domains may not be sealed ('{0}').</value>
  </data>
  <data name="WebDomain_DuplicateName" xml:space="preserve">
    <value>Duplicate web domain name ('{0}').</value>
  </data>
  <data name="WebDomain_CannotInheritFromSealed" xml:space="preserve">
    <value>Cannot inherit from a sealed web domain ({0}).</value>
  </data>
  <data name="WebDomain_DefaultPageAndDefaultEndpointMayNotBothBeSet" xml:space="preserve">
    <value>defaultPage and defaultEndpoint may not both be set.  Please remove one of these.</value>
  </data>
  <data name="WebDomain_DefaultPageCatchAllModeRequiresDefaultPage" xml:space="preserve">
    <value>DefaultPage catch-all mode requires that a default page be set.</value>
  </data>
</root>